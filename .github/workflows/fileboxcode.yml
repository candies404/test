name: 替换 FileCodeBox 密码 构建镜像

on:
  workflow_dispatch:

jobs:
  check-image-existence:
    name: 校验 FileCodeBox 镜像存在性
    runs-on: ubuntu-latest
    outputs:
      image_exists: ${{ steps.docker-check.outputs.image_exists }}
      date_short_sha: ${{ steps.get-tag.outputs.date_short_sha }}
    steps:
      - name: 克隆仓库获取标识
        id: get-tag
        run: |
          git clone --depth=1 https://github.com/vastsa/FileCodeBox.git external-repo
          cd external-repo

          # 获取仓库最新提交的短 SHA (e.g. 3da8a75)
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "SHORT_SHA= $SHORT_SHA" 
          
          # 获取最新提交的日期 (格式: YYYY-MM-DD)
          COMMIT_DATE=$(git log -1 --format="%cd" --date=short)
          echo "date_short_sha=$COMMIT_DATE-$SHORT_SHA" >> $GITHUB_OUTPUT
          echo "🆔 当前标识：$COMMIT_DATE-$SHORT_SHA"

      - name: Docker Hub标签检查（CURL原生实现）
        id: docker-check
        env:
            DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
            DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
            TAG="${{ steps.get-tag.outputs.date_short_sha}}"
            echo "📡 开始检查标签: $TAG"

            # 请求Docker Hub API验证标签存在性
            RESPONSE_CODE=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer $DOCKER_TOKEN" \
            "https://hub.docker.com/v2/namespaces/$DOCKER_USER/repositories/filecodebox/tags/$TAG/")

            # 检查返回状态码
            if [ "$RESPONSE_CODE" = "200" ]; then
            echo "✅ 标签已存在于Docker Hub"
            echo "image_exists=true" >> $GITHUB_OUTPUT
            elif [ "$RESPONSE_CODE" = "404" ]; then
            echo "🆕 未找到标签，需构建新镜像"
            echo "image_exists=false" >> $GITHUB_OUTPUT
            else
            echo "❌ 检查时发生错误 (HTTP $RESPONSE_CODE)"
            exit 1  # 终止工作流
            fi

  build-and-push:
    name: 多架构构建推送 FileCodeBox 镜像
    needs: check-image-existence
    if: ${{ needs.check-image-existence.outputs.image_exists == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - name: 克隆仓库
        uses: actions/checkout@v4
        with:
          repository: vastsa/FileCodeBox
          path: external-repo

      - name: 安全替换配置
        env:
          NEW_TOKEN: ${{ vars.FileCodeBox_PassWord }}
        run: |
          cd external-repo/core
          sed -E -i "s/(admin_token['\"]?:[\t ]*['\"])FileCodeBox2023(['\"])/\1$NEW_TOKEN\2/" settings.py
          echo "✅ 已完成 admin_token 替换"
          grep "admin_token" settings.py

      - name: 初始化跨平台构建环境
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master
          platforms: linux/amd64,linux/arm64

      - name: Docker Hub 登录
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 并行构建推送多架构镜像
        uses: docker/build-push-action@v5
        with:
          context: ./external-repo
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/filecodebox:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/filecodebox:${{ needs.check-image-existence.outputs.date_short_sha }}
          push: true
          # 👇 启用多级构建缓存优化
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          cache-from: type=gha
          cache-to: type=gha,mode=max
