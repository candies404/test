name: Docker Image Sync

on:
  workflow_dispatch:

jobs:
  sync-images:
    runs-on: ubuntu-latest

    steps:
    - name: Install tools
      run: |
        sudo apt-get update
        sudo apt-get install -y skopeo

    - name: Sync images to Docker Hub
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      run: |
        # 定义镜像映射规则
        declare -A image_map=(
          ["nginx"]="nginx-m"
          ["redis:7.0"]="redis:7"
          ["chipsman/uptime-kuma"]="uptime-kuma-back"
          ["chipsman/one-hub"]="one-hub"
        )

        # 源镜像列表
        IMAGES=("nginx" "redis:7.0" "chipsman/uptime-kuma" "chipsman/one-hub")

        # Docker Hub 登录
        echo "$DOCKERHUB_TOKEN" | docker login -u $DOCKERHUB_USERNAME --password-stdin docker.io

        # 镜像同步处理
        for image in "${IMAGES[@]}"; do
          # 检查映射规则是否存在
          if [[ -z "${image_map[$image]}" ]]; then
            echo "⚠️ 未找到映射规则: $image，跳过..."
            continue
          fi

          # 解析源镜像
          if [[ "$image" == *":"* ]]; then
            src_repo="${image%:*}"
            src_tag="${image#*:}"
          else
            src_repo="$image"
            src_tag="latest"
          fi

          # 解析目标映射
          target="${image_map[$image]}"
          if [[ "$target" == *":"* ]]; then
            tgt_repo="${target%:*}"
            tgt_tag="${target#*:}"
          else
            tgt_repo="$target"
            tgt_tag="$src_tag"
          fi

          # 构建完整镜像地址
          src_full="docker://$image"
          tgt_full="docker.io/$DOCKERHUB_USERNAME/$tgt_repo:$tgt_tag"

          # 执行同步操作
          echo "🔄 正在同步: $src_full → $tgt_full"
          docker buildx imagetools create -t "$tgt_full" "$src_full"
          
          # 添加状态标记
          if [ $? -eq 0 ]; then
            echo "✅ 同步成功"
          else
            echo "❌ 同步失败"
          fi
          echo "----------------------------------------"
        done

        echo "🎉 所有镜像同步完成！"
