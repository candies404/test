name: one-hub 前端修改

on:
  workflow_dispatch:

jobs:
  one-hub-custom:
    name: '自定义前端 One Hub'
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      TZ: Asia/Shanghai
    permissions:
      issues: write
    steps:
      - name: 检查one-hub仓库更新
        id: check_main
        run: |
          echo "开始检查 one-hub 仓库更新..."
          # 获取 one-hub 仓库SHA
          MAIN_SHA=$(curl -s "https://api.github.com/repos/MartialBE/one-hub/commits/main" | jq -r '.sha' | cut -c1-7)
          echo "one-hub 仓库最新SHA: $MAIN_SHA"

          TABLE_SHA=$(curl -s "https://api.github.com/repos/MartialBE/one-hub/commits?path=web/src/views/Channel/component/TableRow.jsx" | jq -r 'if length > 0 then .[0].sha else empty end' | cut -c1-7)
          echo "TableRow.jsx最新SHA: $TABLE_SHA"
                    
          ISSUE_INFO=$(curl -s "https://api.github.com/repos/${{ github.repository }}/issues?state=open&per_page=100" | jq -r '[.[] | select(.title == "one-hub")]')
          
          if [ "$(echo "$ISSUE_INFO" | jq 'length')" -eq 0 ]; then
            echo "创建新 issue（初始化）"
            BODY="one-hub-update:$MAIN_SHA"$'\n'"TableRow.jsx-sha:$TABLE_SHA"
            echo "构造的Issue内容：⬇️"
            echo "$BODY"
            
            JSON_DATA=$(jq -n --arg title "one-hub" --arg body "$BODY" '{title: $title, body: $body}')
            RESPONSE=$(curl -sS -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -d "$JSON_DATA" "https://api.github.com/repos/${{ github.repository }}/issues")
            
            if [ $? -ne 0 ]; then
              echo "::error::Issue创建失败"
              exit 1
            else
              echo "Issue创建成功"
              ISSUE_BODY="$BODY"
            fi
            
            echo "main_updated=true" >> $GITHUB_OUTPUT
          else
            ISSUE_ID=$(echo "$ISSUE_INFO" | jq -r '.[0].number')
            ISSUE_BODY=$(echo "$ISSUE_INFO" | jq -r '.[0].body')
            echo "当前 issue ID: $ISSUE_ID"
            echo "当前 issue 内容:⬇️"
            echo "$ISSUE_BODY"
            
            NEW_BODY=$(echo "$ISSUE_BODY" | sed "s/^one-hub-update:.*/one-hub-update:$MAIN_SHA/")

            echo "替换后的新内容:"
            echo "$NEW_BODY"
                        
            if [ "$ISSUE_BODY" != "$NEW_BODY" ]; then
              echo "one-hub 仓库SHA更新"
              JSON_DATA=$(jq -n --arg body "$NEW_BODY" '{body: $body}')
              echo "发送的JSON数据: $JSON_DATA"
              
              # 执行PATCH请求并检查响应
              curl_response=$(curl -sS -w "\n%{http_code}" -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -d "$JSON_DATA" "https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_ID")
              http_code=$(echo "$curl_response" | tail -n1)
              body=$(echo "$curl_response" | sed '$d')
              
              if [ "$http_code" -ne 200 ]; then
                echo "::error::更新issue失败，HTTP状态码: $http_code"
                echo "响应内容: $body"
                exit 1
              else
                echo "Issue更新成功"
              fi
              
              echo "main_updated=true" >> $GITHUB_OUTPUT
            else
              echo "one-hub 仓库未更新"
              echo "main_updated=false" >> $GITHUB_OUTPUT
            fi
          fi

      # - name: 发送 one-hub 仓库更新通知
      #   if: steps.check_main.outputs.main_updated == 'false'
      #   uses: candies404/Multi-Channel-Notifier@latest
      #   with:
      #     title: "One Hub 状态"
      #     content: "one-hub 仓库未检测到更新"
      #     hitokoto: 'false'
      #     wpush_key : ${{ secrets.WPUSH_KEY }}

      - name: one-hub 仓库未更新退出
        if: steps.check_main.outputs.main_updated == 'false'
        run: exit 1

      - name: 检查TableRow更新
        id: check_table
        run: |
          echo "开始检查 TableRow 更新..."
          CURRENT_SHA=$(curl -s "https://api.github.com/repos/MartialBE/one-hub/commits?path=web/src/views/Channel/component/TableRow.jsx" | jq -r 'if length > 0 then .[0].sha else empty end' | cut -c1-7)
          echo "TableRow.jsx 最新SHA: $CURRENT_SHA"
          
          if [ -z "$CURRENT_SHA" ]; then
            echo "::error::无法获取TableRow SHA值"
            exit 1
          fi
          
          echo "current_sha=$CURRENT_SHA" >> $GITHUB_OUTPUT
          
          ISSUE_INFO=$(curl -s "https://api.github.com/repos/${{ github.repository }}/issues?state=open&per_page=100" | jq -r '[.[] | select(.title == "one-hub")]')
          ISSUE_BODY=$(echo "$ISSUE_INFO" | jq -r '.[0].body')
          
          NEW_BODY=$(echo "$ISSUE_BODY" | sed "s/^TableRow.jsx-sha:.*/TableRow.jsx-sha:$CURRENT_SHA/")
          
          if [ "$ISSUE_BODY" != "$NEW_BODY" ]; then
            echo "TableRow SHA更新"
            echo -e "更新前：⬇️\n$ISSUE_BODY"
            echo -e "更新后：⬇️\n$NEW_BODY"
            JSON_DATA=$(jq -n --arg body "$NEW_BODY" '{body: $body}')
            curl -sS -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -d "$JSON_DATA" "https://api.github.com/repos/${{ github.repository }}/issues/$(echo "$ISSUE_INFO" | jq -r '.[0].number')" > /dev/null
            echo "table_updated=true" >> $GITHUB_OUTPUT
          else
            echo "TableRow未更新"
            echo "table_updated=false" >> $GITHUB_OUTPUT
          fi

      - name: 发送TableRow通知
        if: steps.check_table.outputs.table_updated == 'true'
        uses: candies404/Multi-Channel-Notifier@latest
        with:
          title: "TableRow组件更新"
          content: "检测到新版本，点击查看：[TableRow.jsx](https://github.com/MartialBE/one-hub/blob/${{ steps.check_table.outputs.current_sha }}/web/src/views/Channel/component/TableRow.jsx)"
          hitokoto: 'false'
          wpush_key : ${{ secrets.WPUSH_KEY }}

      # - name: 如果文件没有更新则退出
      #   if: steps.check_file.outputs.file_updated == 'false'
      #   run: exit 1
