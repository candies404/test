name: one-hub 前端修改

on:
  workflow_dispatch:

jobs:
  check-updates:
    name: 更新检查
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      TZ: Asia/Shanghai
    permissions:
      issues: write
    outputs:
      build_required: ${{ steps.check_main.outputs.main_updated }}
      table_updated: ${{ steps.check_TableRow_file.outputs.table_file_updated }}
      main_sha: ${{ steps.check_main.outputs.main_sha }}
      table_sha: ${{ steps.check_TableRow_file.outputs.current_sha }}

    steps:
      - name: 检查 one-hub 仓库更新
        id: check_main
        run: |
          echo "开始检查 one-hub 仓库更新..."
          MAIN_SHA=$(curl -s "https://api.github.com/repos/MartialBE/one-hub/commits/main" | jq -r '.sha' | cut -c1-7)
          echo "main_sha=$MAIN_SHA" >> $GITHUB_OUTPUT
          
          ISSUE_INFO=$(curl -s "https://api.github.com/repos/${{ github.repository }}/issues?state=open&per_page=100" | jq -r '[.[] | select(.title == "one-hub")]')
          
          if [ "$(echo "$ISSUE_INFO" | jq 'length')" -eq 0 ]; then
            BODY="one-hub-update:$MAIN_SHA\nTableRow.jsx-sha:placeholder"
            JSON_DATA=$(jq -n --arg title "one-hub" --arg body "$BODY" '{title: $title, body: $body}')
            curl -sS -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -d "$JSON_DATA" "https://api.github.com/repos/${{ github.repository }}/issues"
            echo "main_updated=true" >> $GITHUB_OUTPUT
          else
            ISSUE_BODY=$(echo "$ISSUE_INFO" | jq -r '.[0].body')
            CURRENT_SHA=$(echo "$ISSUE_BODY" | grep -oP 'one-hub-update:\K\w+')
            
            if [ "$MAIN_SHA" != "$CURRENT_SHA" ]; then
              NEW_BODY=$(echo "$ISSUE_BODY" | sed "s/one-hub-update:.*/one-hub-update:$MAIN_SHA/")
              JSON_DATA=$(jq -n --arg body "$NEW_BODY" '{body: $body}')
              curl -sS -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -d "$JSON_DATA" "https://api.github.com/repos/${{ github.repository }}/issues/$(echo "$ISSUE_INFO" | jq -r '.[0].number')"
              echo "main_updated=true" >> $GITHUB_OUTPUT
            else
              echo "main_updated=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: 检查 TableRow 更新
        id: check_TableRow_file
        run: |
          CURRENT_SHA=$(curl -s "https://api.github.com/repos/MartialBE/one-hub/commits?path=web/src/views/Channel/component/TableRow.jsx" | jq -r '.[0].sha' | cut -c1-7)
          echo "current_sha=$CURRENT_SHA" >> $GITHUB_OUTPUT
          
          ISSUE_INFO=$(curl -s "https://api.github.com/repos/${{ github.repository }}/issues?state=open&per_page=100" | jq -r '[.[] | select(.title == "one-hub")]')
          ISSUE_BODY=$(echo "$ISSUE_INFO" | jq -r '.[0].body')
          OLD_SHA=$(echo "$ISSUE_BODY" | grep -oP 'TableRow.jsx-sha:\K\w+')
          
          if [ "$CURRENT_SHA" != "$OLD_SHA" ]; then
            NEW_BODY=$(echo "$ISSUE_BODY" | sed "s/TableRow.jsx-sha:.*/TableRow.jsx-sha:$CURRENT_SHA/")
            JSON_DATA=$(jq -n --arg body "$NEW_BODY" '{body: $body}')
            curl -sS -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -d "$JSON_DATA" "https://api.github.com/repos/${{ github.repository }}/issues/$(echo "$ISSUE_INFO" | jq -r '.[0].number')"
            echo "table_file_updated=true" >> $GITHUB_OUTPUT
          else
            echo "table_file_updated=false" >> $GITHUB_OUTPUT
          fi

      - name: 发送 TableRow 通知
        if: steps.check_TableRow_file.outputs.table_file_updated == 'true'
        uses: candies404/Multi-Channel-Notifier@latest
        with:
          title: "TableRow 组件更新"
          content: "检测到新版本，点击查看：[TableRow.jsx](https://github.com/MartialBE/one-hub/blob/main/web/src/views/Channel/component/TableRow.jsx)"
          hitokoto: 'false'
          wpush_key: ${{ secrets.WPUSH_KEY }}

  build-deploy:
    name: 构建部署
    needs: check-updates
    if: ${{ needs.check-updates.outputs.build_required == 'true' }}
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai
    permissions:
      contents: read
      packages: write

    steps:
      - name: 检出 one-hub 仓库
        uses: actions/checkout@v4
        with:
          repository: MartialBE/one-hub
          ref: main
          path: main-repo

      - name: 检出定制仓库
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          path: custom-repo

      - name: 同步定制组件
        run: |
          cp custom-repo/one-hub/TableRow.jsx main-repo/web/src/views/Channel/component/TableRow.jsx
          echo "组件替换完成"

      - name: 设置 Node.js 环境
        uses: actions/setup-node@v4
        with:
          node-version: 22.4.1
          cache: 'yarn'

      - name: 构建前端
        working-directory: ./main-repo/web
        run: |
          yarn install
          VITE_APP_VERSION=dev-${{ needs.check-updates.outputs.main_sha }} yarn build
          echo "前端构建完成"

      - name: 设置 Go 环境
        uses: actions/setup-go@v5
        with:
          go-version: ">=1.18.0"

      - name: 交叉编译
        working-directory: ./main-repo
        run: |
          export GOARCH=amd64
          go build -ldflags "-X 'one-api/common/config.Version=dev-${{ needs.check-updates.outputs.main_sha }}'" -o one-api-amd64
          
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
          export GOARCH=arm64 CC=aarch64-linux-gnu-gcc
          go build -ldflags "-X 'one-api/common/config.Version=dev-${{ needs.check-updates.outputs.main_sha }}'" -o one-api-arm64

      - name: 构建多架构镜像
        uses: docker/build-push-action@v5
        with:
          context: ./main-repo
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/one-hub:dev-${{ needs.check-updates.outputs.main_sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 发送部署通知
        uses: candies404/Multi-Channel-Notifier@latest
        with:
          title: "成功部署新版本"
          content: "版本号: dev-${{ needs.check-updates.outputs.main_sha }}"
          hitokoto: 'false'
          wpush_key: ${{ secrets.WPUSH_KEY }}
